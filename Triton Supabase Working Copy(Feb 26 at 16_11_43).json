{
  "createdAt": "2025-02-24T08:39:46.453Z",
  "updatedAt": "2025-03-03T06:08:35.000Z",
  "id": "87W9jIQt9PIr1gbc",
  "name": "Triton Supabase Working Copy",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1700,
        860
      ],
      "id": "2a5ab1af-086e-43be-a004-4848c6404b1c",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -220,
        0
      ],
      "id": "ce6a29eb-cb44-4ffc-9ce7-10d315b7fd2d",
      "name": "When chat message received",
      "webhookId": "a813d863-908b-45f9-94eb-a918c07b4749"
    },
    {
      "parameters": {
        "name": "Documents",
        "description": "Data to answer based on the stored documents. You should always use this data no matter what the query is.",
        "topK": 15
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        300,
        220
      ],
      "id": "246ac3b3-4882-475d-abaa-35aa32373759",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a6f8aefc-37ac-43d4-9cf5-1db613c5efe8",
              "leftValue": "={{ $json.download_link }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        480,
        1300
      ],
      "id": "e02ebc32-8fa2-4df4-ade5-afb7c5918576",
      "name": "Check if Download Link Exists"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.zohoapis.in/workdrive/api/v1/multizip",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Zoho-oauthtoken {{ $json.access_token }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"data\": {\n    \"attributes\": {\n      \"resource_id\": \"0ou3z8bf2d8044515409fae2c9eee6eca7f3c\"\n    },\n    \"type\": \"files\"\n  }\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 3000
            }
          },
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        260,
        1300
      ],
      "id": "06e460f9-93e3-4961-b964-3c880be9ddc6",
      "name": "Zip All files from a pre-selected Zoho Workdrive Folder",
      "alwaysOutputData": false,
      "retryOnFail": false,
      "maxTries": 3,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 55
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -660,
        1080
      ],
      "id": "b352e207-77f8-4b3c-865d-9dd5e7ab9c8f",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "https://mraojbhqeymzsvvqulok.supabase.co/rest/v1/documents?id=gt.0",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1yYW9qYmhxZXltenN2dnF1bG9rIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkxNjY0OTcsImV4cCI6MjA1NDc0MjQ5N30.ntKurVGioEGgp9dbdbb6e-829cqXkOI6Pa1KU1yFZjk"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -340,
        1080
      ],
      "id": "f68801af-becc-4192-8e05-4bbb6fb00104",
      "name": "Delete node"
    },
    {
      "parameters": {
        "url": "https://zoho-access-token-refresher-api.onrender.com/refresh-token",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "1000.F0ZVRFPFZLBJ5F4OUYNT16XZXSB8RS"
            },
            {
              "name": "client_secret",
              "value": "574f4ca5a62c1353e5196d5029c2c172a312f73495"
            },
            {
              "name": "token",
              "value": "1000.031da72bed142c36290069922c366d66.58a466ced05515832870434108b208df"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -20,
        1080
      ],
      "id": "17f30281-ec30-434c-8c2e-af6f5a082228",
      "name": "Access_token-refresher",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "={{ $json.download_link }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "wms-tkp-token=60037695728-c9c4fce6-fa9f09462b36c647786ded70cd98ead1; CT_CSRF_TOKEN=9e8022b56530694650ba2b33d22d17eaa0a59e7926924586080e2febda5c4c66c87c7a2c20e872f1cff7ddb27003f7801faa2cad1298e7b4ac5d9c674da7dfe7; zalb_9ca8afda3c=67cedda465839ebb400f534ce758c510; zpcc=9e8022b56530694650ba2b33d22d17eaa0a59e7926924586080e2febda5c4c66c87c7a2c20e872f1cff7ddb27003f7801faa2cad1298e7b4ac5d9c674da7dfe7; zalb_13e18a66b2=3ef4df315380ed89ad7f51333f5a80eb; _zcsr_tmp=9e8022b56530694650ba2b33d22d17eaa0a59e7926924586080e2febda5c4c66c87c7a2c20e872f1cff7ddb27003f7801faa2cad1298e7b4ac5d9c674da7dfe7; _iambdt=debda297dde58d58f0fce91527ef9f5e802a8be7d46ea08b382f374eb07482013adc2189b9ba4d3bdb3e41d90af67a914bdc3988df73cfadafc42dc016216b59; _iamadt=9a436cf2b24a4f0c414bfdafa4f335b7a4a2bc91ec22de37626ab4c4e0cc766d31cb3fba099d1fd4e0206ccbdcc90a56"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        1080
      ],
      "id": "cc216f64-67b3-4048-b94f-f3a6d3722ccd",
      "name": "Download Zip of All Files",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "// üîÑ Process all binary files and output them as individual items\nreturn $input.all().flatMap(item =>\n  Object.keys(item.binary || {}).map(key => ({\n    binary: {\n      data: item.binary[key] // Assign the binary file data\n    },\n    json: {\n      fileName: item.binary[key].fileName || 'unknown',          // üìÅ File Name\n      mimeType: item.binary[key].mimeType || 'unknown',          // üè∑Ô∏è Mime Type\n      fileExtension: item.binary[key].fileExtension || 'unknown',// üìÇ File Extension\n      directory: item.binary[key].directory || 'root'            // üìÅ Directory Info\n    }\n  }))\n);\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1220,
        1080
      ],
      "id": "791bda24-0a9a-4b35-b697-119b510ee365",
      "name": "Split into multiple file items"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b4eae290-6e26-4796-982c-4d960b3394a7",
              "leftValue": "={{ $binary.data.fileSize }}",
              "rightValue": "0 B",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1440,
        1080
      ],
      "id": "1215e9db-5dbc-4a37-8739-545d17b967bd",
      "name": "Check if file empty"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a7f45737-1d7e-47e4-9e95-069c3f1a8a3d",
              "leftValue": "={{ $binary.data.mimeType}}",
              "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1700,
        1160
      ],
      "id": "a83bb686-f49a-4818-9019-7d0c8f18c870",
      "name": "Check if XLSX file"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2120,
        500
      ],
      "id": "f666f603-9db0-4b59-a83f-27c85c1e2fca",
      "name": "Loop Over XLSX Items"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2060,
        1200
      ],
      "id": "6519b87f-1f8a-4ee8-a91f-859c5066a4ba",
      "name": "Loop Over Other than XLSX Items",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2300,
        1200
      ],
      "id": "cb3e4f7d-afab-419b-9fe3-df6efc9b9541",
      "name": "Enter non XLSX files to Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "8T4ZssngJj4zgaSj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2240,
        1460
      ],
      "id": "0320b0bf-b329-4a21-ade7-c81e6c658106",
      "name": "Files Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "70mdnyT0Y3n9r6Lg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2380,
        1460
      ],
      "id": "2810b13f-6dc1-4bc9-bdf1-5936c926625c",
      "name": "Files Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 1200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2460,
        1660
      ],
      "id": "3b87397d-a8b1-477d-b89c-c495f9d829d2",
      "name": "Files Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are an intelligent assistant connected to a Supabase vector store database that contains various resource documents. These documents may include stories, financial data, technical information, or general knowledge.\n\nImportant Constraints:\n\nOnly respond with information derived strictly from the Supabase vector store documents.\nDo NOT generate answers based on external knowledge or assumptions.\nIf the information is not available in the Supabase database, respond with:\n\"Sorry, I do not have information on that topic based on the available resources.\"\nFor general greetings or small talk (e.g., \"Hi\", \"Hello\"), normal conversational responses are allowed.\nFor all other queries, ensure responses are exclusively based on the Supabase documents.\nDeep Understanding & Contextual Search:\nFirst, fully understand the user's question and its context.\nThen, perform an in-depth semantic search across the Supabase vector store to find the most relevant information.\nVerify each step of the process before moving to the next. Only after confirming relevant data has been identified should you proceed to generate a response.\nAnswer Generation:\nGenerate precise, clear, and contextually relevant answers strictly from the identified Supabase data.\nCite relevant sections or summaries from the Supabase content where applicable.\nNo Hallucination Policy:\nUnder no circumstances should you provide fabricated, estimated, or unrelated answers.\nDo not provide opinions, external facts, or assumptions outside of what is explicitly available in the Supabase documents.\nStep-by-Step Reasoning:\nFor complex queries, break down the reasoning process, validate each intermediate result, and only then provide the final answer.\nAnd make sure that dont answer from the user chat memory.\n\nAlso make sure if the user asks for a table then follow this default table format when user dont mention anything- Format:- The table must have no breaks, no extra spaces, and should appear exactly like an Excel table, with aligned columns and proper borders. The table should use fixed-width formatting, ensuring numbers and text line up perfectly under each column header."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        60,
        0
      ],
      "id": "7091480d-c521-46e2-849c-232d191829d6",
      "name": "AI Agent for QnA from Document"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -100,
        260
      ],
      "id": "2e47d1d2-4e1f-499e-bb5c-c54bae134054",
      "name": "OpenAI Chat Model for Tool Calling and QnA",
      "credentials": {
        "openAiApi": {
          "id": "70mdnyT0Y3n9r6Lg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        100,
        260
      ],
      "id": "a3fe5814-071a-4e3b-ae79-694be86de3d1",
      "name": "Postgres Chat History Memory",
      "credentials": {
        "postgres": {
          "id": "Qhq75MQSRUm9GgHX",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        220,
        460
      ],
      "id": "7b21627f-1363-4c11-bc2a-51dd5db380e0",
      "name": "Documents Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "8T4ZssngJj4zgaSj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {
          "temperature": 0.6
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        600,
        440
      ],
      "id": "2874845a-6205-4d99-bd59-cd4b3437abb5",
      "name": "OpenAI Chat Model for Documents retrieval",
      "credentials": {
        "openAiApi": {
          "id": "70mdnyT0Y3n9r6Lg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        280,
        620
      ],
      "id": "7fd62067-c4f1-4941-9779-72f45590849e",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "70mdnyT0Y3n9r6Lg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-thinking-exp",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        860,
        440
      ],
      "id": "aa0c91c4-004d-49c1-a71a-cff0e97d730d",
      "name": "Google Gemini Chat Model for Documents Retrieval",
      "credentials": {
        "googlePalmApi": {
          "id": "e441VEhxq1oRsMM3",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -380,
        260
      ],
      "id": "c4189e03-b623-414f-8967-9466b3f8b3c2",
      "name": "Google Gemini Chat Model for QnA and Tool Calling",
      "credentials": {
        "googlePalmApi": {
          "id": "e441VEhxq1oRsMM3",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.compression",
      "typeVersion": 1.1,
      "position": [
        1020,
        1080
      ],
      "id": "1ec325d9-207c-4906-9727-c45ef38e8cfd",
      "name": "Unzip into 1 item containing all files",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2400,
        500
      ],
      "id": "403caf0a-53df-4443-b939-dc7426c84b04",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2820,
        740
      ],
      "id": "380f542c-35c8-4d14-ac34-350ca7a6723c",
      "name": "XLSX Data Loader"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2640,
        500
      ],
      "id": "835c3797-042e-4b3e-84a4-ee73face5cb9",
      "name": "Enter XLSXs to Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "8T4ZssngJj4zgaSj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2660,
        740
      ],
      "id": "9bb8a40d-7437-4139-a31d-14973a1661bf",
      "name": "XLSX files Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "70mdnyT0Y3n9r6Lg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 1200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2860,
        900
      ],
      "id": "209f7de5-ef20-4b0b-8c09-42229d18c1d0",
      "name": "XLSX Recursive Character Text Splitter"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        480,
        1500
      ],
      "id": "0f577dd5-461c-4265-940c-79de8f7c2a35",
      "name": "Wait",
      "webhookId": "80d79d2d-dfa3-4d6e-8533-97be6fb2a877",
      "retryOnFail": false
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent for QnA from Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent for QnA from Document",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check if Download Link Exists": {
      "main": [
        [
          {
            "node": "Download Zip of All Files",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zip All files from a pre-selected Zoho Workdrive Folder": {
      "main": [
        [
          {
            "node": "Check if Download Link Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Delete node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete node": {
      "main": [
        [
          {
            "node": "Access_token-refresher",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Access_token-refresher": {
      "main": [
        [
          {
            "node": "Zip All files from a pre-selected Zoho Workdrive Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Zip of All Files": {
      "main": [
        [
          {
            "node": "Unzip into 1 item containing all files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split into multiple file items": {
      "main": [
        [
          {
            "node": "Check if file empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if file empty": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check if XLSX file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if XLSX file": {
      "main": [
        [
          {
            "node": "Loop Over XLSX Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Other than XLSX Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over XLSX Items": {
      "main": [
        [],
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Other than XLSX Items": {
      "main": [
        [],
        [
          {
            "node": "Enter non XLSX files to Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enter non XLSX files to Supabase Vector Store": {
      "main": [
        [
          {
            "node": "Loop Over Other than XLSX Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Files Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Enter non XLSX files to Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Files Data Loader": {
      "ai_document": [
        [
          {
            "node": "Enter non XLSX files to Supabase Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Files Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Files Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model for Tool Calling and QnA": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent for QnA from Document",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat History Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent for QnA from Document",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Documents Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model for Documents retrieval": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Documents Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model for Documents Retrieval": {
      "ai_languageModel": [
        []
      ]
    },
    "Google Gemini Chat Model for QnA and Tool Calling": {
      "ai_languageModel": [
        []
      ]
    },
    "Unzip into 1 item containing all files": {
      "main": [
        [
          {
            "node": "Split into multiple file items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Enter XLSXs to Supabase Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XLSX Data Loader": {
      "ai_document": [
        [
          {
            "node": "Enter XLSXs to Supabase Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Enter XLSXs to Supabase Vector Store1": {
      "main": [
        [
          {
            "node": "Loop Over XLSX Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XLSX files Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Enter XLSXs to Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "XLSX Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "XLSX Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Zip All files from a pre-selected Zoho Workdrive Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "f72355ca-18dd-442c-ba0e-2931d5fa468f",
  "triggerCount": 3,
  "tags": [],
  "homeProject": {
    "id": "NhDuGGpPxmoMmceF",
    "type": "personal",
    "name": "Rittik  Halder <soumik.zom@gmail.com>",
    "icon": null
  },
  "sharedWithProjects": [],
  "usedCredentials": [
    {
      "id": "70mdnyT0Y3n9r6Lg",
      "name": "OpenAi account",
      "type": "openAiApi",
      "currentUserHasAccess": true,
      "homeProject": {
        "id": "NhDuGGpPxmoMmceF",
        "type": "personal",
        "name": "Rittik  Halder <soumik.zom@gmail.com>",
        "icon": null
      },
      "sharedWithProjects": []
    },
    {
      "id": "8T4ZssngJj4zgaSj",
      "name": "Supabase account",
      "type": "supabaseApi",
      "currentUserHasAccess": true,
      "homeProject": {
        "id": "NhDuGGpPxmoMmceF",
        "type": "personal",
        "name": "Rittik  Halder <soumik.zom@gmail.com>",
        "icon": null
      },
      "sharedWithProjects": []
    },
    {
      "id": "Qhq75MQSRUm9GgHX",
      "name": "Postgres account",
      "type": "postgres",
      "currentUserHasAccess": true,
      "homeProject": {
        "id": "NhDuGGpPxmoMmceF",
        "type": "personal",
        "name": "Rittik  Halder <soumik.zom@gmail.com>",
        "icon": null
      },
      "sharedWithProjects": []
    },
    {
      "id": "e441VEhxq1oRsMM3",
      "name": "Google Gemini(PaLM) Api account",
      "type": "googlePalmApi",
      "currentUserHasAccess": true,
      "homeProject": {
        "id": "NhDuGGpPxmoMmceF",
        "type": "personal",
        "name": "Rittik  Halder <soumik.zom@gmail.com>",
        "icon": null
      },
      "sharedWithProjects": []
    }
  ],
  "scopes": [
    "workflow:create",
    "workflow:delete",
    "workflow:execute",
    "workflow:list",
    "workflow:move",
    "workflow:read",
    "workflow:share",
    "workflow:update"
  ]
}